@{
  ViewData["Title"] = "Store";
}

@section VendorStyles {
  <link rel="stylesheet" href="~/vendor/libs/select2/select2.css" />
  <link rel="stylesheet" href="~/vendor/libs/bs-stepper/bs-stepper.css" />
  <link rel="stylesheet" href="~/vendor/libs/rateyo/rateyo.css" />
  <link rel="stylesheet" href="~/vendor/libs/&#64;form-validation/form-validation.css" />
}

@section VendorScripts {
  <script src="~/vendor/libs/jquery/jquery.js"></script>
  <script src="~/vendor/libs/select2/select2.js"></script>
  <script src="~/vendor/libs/bs-stepper/bs-stepper.js"></script>
  <script src="~/vendor/libs/rateyo/rateyo.js"></script>
  <script src="~/vendor/libs/cleavejs/cleave.js"></script>
  <script src="~/vendor/libs/cleavejs/cleave-phone.js"></script>
  <script src="~/vendor/libs/&#64;form-validation/popular.js"></script>
  <script src="~/vendor/libs/&#64;form-validation/bootstrap5.js"></script>
  <script src="~/vendor/libs/&#64;form-validation/auto-focus.js"></script>
  <script>
    // Initialize cart from localStorage or empty array
    let cart = JSON.parse(localStorage.getItem('cart')) || [];
    console.log('Cart initialized from localStorage:', cart);
    
    // Function to check if cart is empty
    function isCartEmpty() {
      const isEmpty = cart.length === 0;
      console.log('isCartEmpty check:', isEmpty, 'Cart length:', cart.length);
      return isEmpty;
    }
    
    // Function to display empty cart state
    function displayEmptyCart() {
      const cartContainer = document.getElementById('store-cart-items');
      const cartActions = document.getElementById('cart-actions');
      if (!cartContainer) return;
      
      cartContainer.classList.add('d-flex', 'align-items-center', 'justify-content-center');
      cartContainer.style.minHeight = '100%';
      cartContainer.style.height = '100%';
      cartContainer.style.padding = '2rem 0';
      cartContainer.innerHTML = `
        <div class="text-center">
          <img src="/img/discounts/cart.gif" alt="Empty cart" style="max-width:160px; width:100%; height:auto;" class="mb-3" />
          <p class="mb-0 text-muted fs-6">Your shopping cart now is empty</p>
        </div>
      `;
      
      // Hide buttons when cart is empty
      if (cartActions) {
        cartActions.style.display = 'none';
      }
    }
    
    // Function to toggle cart visibility
    function toggleCart(show = null) {
      const cartSidebar = document.getElementById('shopping-cart-sidebar');
      if (!cartSidebar) return;
      
      const currentDisplay = window.getComputedStyle(cartSidebar).display;
      
      if (show === true) {
        cartSidebar.style.display = 'flex';
      } else if (show === false) {
        cartSidebar.style.display = 'none';
      } else {
        // Toggle current state
        cartSidebar.style.display = currentDisplay === 'none' ? 'flex' : 'none';
      }
    }
    
    // Update cart in the store page
    function updateCart() {
      const cartContainer = document.getElementById('store-cart-items');
      const cartSidebar = document.getElementById('shopping-cart-sidebar');
      
      if (!cartContainer) return;
      
      cartContainer.innerHTML = '';
      
      if (isCartEmpty()) {
        displayEmptyCart();
        // Always keep hidden when empty
        if (cartSidebar) {
          cartSidebar.style.display = 'none';
        }
      }
      
      cartContainer.classList.remove('d-flex', 'align-items-center', 'justify-content-center');
      cartContainer.style.minHeight = '';
      cartContainer.style.height = '';
      cartContainer.style.padding = '';
      
      // Show buttons when cart has items
      const cartActions = document.getElementById('cart-actions');
      if (cartActions) {
        cartActions.style.display = 'flex';
      }
      
      cart.forEach((item, index) => {
        const cartItem = document.createElement('div');
        cartItem.className = 'd-flex align-items-center mb-2 p-2';
        cartItem.style.border = '1px solid #e0e0e0';
        cartItem.style.borderRadius = '8px';
        cartItem.style.background = '#fff';
        cartItem.innerHTML = `
          <img src="${item.image || '/img/discounts/pc.png'}" alt="${item.name}" class="me-2" style="width: 36px; height: 36px; object-fit: cover; border-radius: 6px;">
          <div class="flex-grow-1" style="min-width:0;">
            <div class="fw-semibold" style="font-size: 0.98rem; white-space:nowrap; overflow:hidden; text-overflow:ellipsis;">${item.name}</div>
            <div class="text-muted" style="font-size: 0.85rem;">$${item.price.toFixed(2)}</div>
          </div>
          <div class="d-flex align-items-center ms-2">
            <button class="btn btn-sm btn-outline-secondary rounded-pill me-1" style="width:28px;height:28px;padding:0;" onclick="updateQuantity('${item.id}', -1)">-</button>
            <span class="mx-1" style="font-size:0.98rem; min-width:18px; text-align:center;">${item.quantity}</span>
            <button class="btn btn-sm btn-outline-secondary rounded-pill ms-1" style="width:28px;height:28px;padding:0;" onclick="updateQuantity('${item.id}', 1)">+</button>
          </div>
        `;
        cartContainer.appendChild(cartItem);
      });
      
      // Update cart count in navbar
      const cartCount = document.getElementById('cart-count');
      if (cartCount) {
        const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
        cartCount.textContent = totalItems;
        cartCount.style.display = totalItems > 0 ? 'flex' : 'none';
      }
    }
    
    // Update item quantity in cart
    window.updateQuantity = function(productId, change) {
      console.log('Updating quantity for product:', productId, 'Change:', change);
      
      // Find the item in the cart
      const itemIndex = cart.findIndex(item => item.id === productId);
      
      if (itemIndex !== -1) {
        // Update quantity
        cart[itemIndex].quantity += change;
        
        // If quantity is 0 or less, remove the item from cart
        if (cart[itemIndex].quantity <= 0) {
          // Store the removed item for button reset
          const removedItem = cart[itemIndex];
          cart.splice(itemIndex, 1);
          
          // Reset the "Add to Cart" button in the product grid
          const productButtons = document.querySelectorAll(`.add-to-cart-btn[data-product-id="${productId}"]`);
          productButtons.forEach(button => {
            if (button) {
              button.textContent = 'Add To Cart';
              button.classList.remove('btn-outline-warning');
              button.classList.add('btn-outline-dark');
            }
          });
          
          // Show toast notification for removed item
          showToast('Item Removed', `${removedItem.name} has been removed from your cart`, 'info');
        }
        
        // Save updated cart to localStorage
        localStorage.setItem('cart', JSON.stringify(cart));
        
        // Update the cart UI
        updateCart();
        
        // If cart is empty after update, ensure the cart is hidden
        if (cart.length === 0) {
          const cartSidebar = document.getElementById('shopping-cart-sidebar');
          if (cartSidebar) {
            cartSidebar.style.display = 'none';
          }
        }
      }
    }
    
    // Show toast notification
    function showToast(title, message, type = 'success') {
      const toastContainer = document.getElementById('toast-container');
      if (!toastContainer) return;
      
      const toast = document.createElement('div');
      toast.className = `toast align-items-center text-white bg-${type} border-0 show`;
      toast.setAttribute('role', 'alert');
      toast.setAttribute('aria-live', 'assertive');
      toast.setAttribute('aria-atomic', 'true');
      
      toast.innerHTML = `
        <div class="d-flex">
          <div class="toast-body">
            <i class='bx ${type === 'success' ? 'bx-check-circle' : 'bx-info-circle'} me-2'></i>
            <strong>${title}:</strong> ${message}
          </div>
          <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
      `;
      
      toastContainer.appendChild(toast);
      
      // Auto remove toast after 3 seconds
      setTimeout(() => {
        toast.classList.remove('show');
        setTimeout(() => toast.remove(), 300);
      }, 3000);
    }
    
    // Close cart overlay
    window.closeCart = function() {
      const storeCart = document.getElementById('shopping-cart-sidebar');
      if (storeCart) storeCart.style.display = 'none';
    }
    
    // Go to checkout page
    window.goToCheckout = function() {
      console.log('goToCheckout function called');
      console.log('Cart contents:', cart);
      
      if (isCartEmpty()) {
        console.log('Cart is empty, showing alert');
        alert('Your cart is empty!');
        return;
      }
      
      // Navigate to checkout page with cart data
      const cartData = encodeURIComponent(JSON.stringify(cart));
      console.log('Encoded cart data:', cartData);
      console.log('Redirecting to:', `/Checkout?cart=${cartData}`);
      
      // Try multiple redirect approaches
      try {
        console.log('Attempting redirect...');
        
        // Method 1: Direct assignment
        const redirectUrl = `/Checkout?cart=${cartData}`;
        console.log('Redirect URL:', redirectUrl);
        
        // Method 2: Try using location.assign
        window.location.assign(redirectUrl);
        
        // Method 3: Fallback to direct assignment after a short delay
        setTimeout(() => {
          console.log('Fallback redirect attempt...');
          window.location.href = redirectUrl;
        }, 100);
        
      } catch (error) {
        console.error('Redirect error:', error);
        alert('Redirect failed: ' + error.message);
      }
    }
    
    // Initialize cart on page load
    document.addEventListener('DOMContentLoaded', function() {
      // Test if function is available globally
      console.log('goToCheckout function available:', typeof window.goToCheckout);
      
      // Ensure navbar cart icon toggles this page's sidebar cart
      const cartIcon = document.getElementById('cart-icon');
      if (cartIcon) {
        cartIcon.addEventListener('click', function(e) {
          e.preventDefault();
          toggleCart();
        });
      }
      // Initialize cart state
      if (isCartEmpty()) {
        displayEmptyCart();
      } else {
        updateCart();
      }
      
      // Set up add to cart buttons
      document.querySelectorAll('.add-to-cart-btn').forEach(button => {
        button.addEventListener('click', function() {
          const productId = this.getAttribute('data-product-id');
          const productName = this.getAttribute('data-product-name');
          const productPrice = parseFloat(this.getAttribute('data-product-price'));
          const productImage = this.closest('.product-card').querySelector('img').src;
          
          // Add to cart
          const existingItem = cart.find(item => item.id === productId);
          if (existingItem) {
            existingItem.quantity += 1;
            console.log('Updated existing item:', existingItem);
          } else {
            const newItem = {
              id: productId,
              name: productName,
              price: productPrice,
              quantity: 1,
              image: productImage
            };
            cart.push(newItem);
            console.log('Added new item to cart:', newItem);
          }
          
          console.log('Current cart state:', cart);
          localStorage.setItem('cart', JSON.stringify(cart));
          
          // Update button text and style
          this.textContent = 'Added';
          this.classList.remove('btn-outline-dark');
          this.classList.add('btn-outline-warning');
          
          updateCart();
          // Show sidebar when first item is added or when cart becomes non-empty
          toggleCart(true);
        });
      });
    });
  </script>
}



<!-- Toast Notification -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
  <div id="cart-toast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
      <div class="toast-body">
        <i class='bx bx-check-circle me-2'></i> Item added to cart
      </div>
      <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
  </div>
</div>

<div class="container-xxl flex-grow-1 container-p-y" id="store-content">

  <div class="row g-4">
    <!-- Main Content - Product Grid -->
    <div class="col-12">
      <h4 class="fw-bold mb-4">Product List</h4>
      
      <div class="row g-4">
        <!-- Product Card 1 -->
        <div class="col-md-3">
          <div class="card product-card" data-product-id="1">
            <div class="card-body text-center">
              <img src="~/img/discounts/pc.png" alt="Point of Sale" class="img-fluid mb-3" style="max-height: 150px;">
              <h6 class="card-title">Point of Sale</h6>
              <p class="text-muted small mb-2">183.7 × 149.88</p>
              <div class="price mb-3" data-price="200.00">$200.00</div>
              <button class="btn btn-outline-dark add-to-cart-btn" style="font-size:0.95rem; padding:0.35rem 0.7rem;" data-product-id="1" data-product-name="Point of Sale" data-product-price="200.00">
                Add To Cart
              </button>
            </div>
          </div>
        </div>

        <!-- Product Card 2 -->
        <div class="col-md-3">
          <div class="card product-card" data-product-id="2">
            <div class="card-body text-center">
              <img src="~/img/discounts/pc.png" alt="Point of Sale" class="img-fluid mb-3" style="max-height: 150px;">
              <h6 class="card-title">Point of Sale</h6>
              <p class="text-muted small mb-2">183.7 × 149.88</p>
              <div class="price mb-3" data-price="200.00">$200.00</div>
                             <button class="btn btn-outline-dark add-to-cart-btn" style="font-size:0.95rem; padding:0.35rem 0.7rem;" data-product-id="2" data-product-name="Point of Sale" data-product-price="200.00">
                 Add To Cart
               </button>
             </div>
           </div>
         </div>

         <!-- Product Card 3 -->
         <div class="col-md-3">
           <div class="card product-card" data-product-id="3">
             <div class="card-body text-center">
               <img src="~/img/discounts/pc.png" alt="Point of Sale" class="img-fluid mb-3" style="max-height: 150px;">
               <h6 class="card-title">Point of Sale</h6>
               <p class="text-muted small mb-2">183.7 × 149.88</p>
               <div class="price mb-3" data-price="200.00">$200.00</div>
               <button class="btn btn-outline-dark add-to-cart-btn" style="font-size:0.95rem; padding:0.35rem 0.7rem;" data-product-id="3" data-product-name="Point of Sale" data-product-price="200.00">
                 Add To Cart
               </button>
             </div>
           </div>
         </div>

         <!-- Product Card 4 -->
         <div class="col-md-3">
           <div class="card product-card" data-product-id="4">
             <div class="card-body text-center">
               <img src="~/img/discounts/pc.png" alt="Point of Sale" class="img-fluid mb-3" style="max-height: 150px;">
               <h6 class="card-title">Point of Sale</h6>
               <p class="text-muted small mb-2">183.7 × 149.88</p>
               <div class="price mb-3" data-price="200.00">$200.00</div>
               <button class="btn btn-outline-dark add-to-cart-btn" style="font-size:0.95rem; padding:0.35rem 0.7rem;" data-product-id="4" data-product-name="Point of Sale" data-product-price="200.00">
                 Add To Cart
               </button>
             </div>
           </div>
         </div>

         <!-- Product Card 5 -->
         <div class="col-md-3">
           <div class="card product-card" data-product-id="5">
             <div class="card-body text-center">
               <img src="~/img/discounts/pc.png" alt="Point of Sale" class="img-fluid mb-3" style="max-height: 150px;">
               <h6 class="card-title">Point of Sale</h6>
               <p class="text-muted small mb-2">183.7 × 149.88</p>
               <div class="price mb-3" data-price="200.00">$200.00</div>
               <button class="btn btn-outline-dark add-to-cart-btn" style="font-size:0.95rem; padding:0.35rem 0.7rem;" data-product-id="5" data-product-name="Point of Sale" data-product-price="200.00">
                 Add To Cart
               </button>
             </div>
           </div>
         </div>

         <!-- Product Card 6 -->
         <div class="col-md-3">
           <div class="card product-card" data-product-id="6">
             <div class="card-body text-center">
               <img src="~/img/discounts/pc.png" alt="Point of Sale" class="img-fluid mb-3" style="max-height: 150px;">
               <h6 class="card-title">Point of Sale</h6>
               <p class="text-muted small mb-2">183.7 × 149.88</p>
               <div class="price mb-3" data-price="200.00">$200.00</div>
               <button class="btn btn-outline-dark add-to-cart-btn" style="font-size:0.95rem; padding:0.35rem 0.7rem;" data-product-id="6" data-product-name="Point of Sale" data-product-price="200.00">
                 Add To Cart
               </button>
             </div>
           </div>
         </div>

         <!-- Product Card 7 -->
         <div class="col-md-3">
           <div class="card product-card" data-product-id="7">
             <div class="card-body text-center">
               <img src="~/img/discounts/pc.png" alt="Point of Sale" class="img-fluid mb-3" style="max-height: 150px;">
               <h6 class="card-title">Point of Sale</h6>
               <p class="text-muted small mb-2">183.7 × 149.88</p>
               <div class="price mb-3" data-price="200.00">$200.00</div>
               <button class="btn btn-outline-dark add-to-cart-btn" style="font-size:0.95rem; padding:0.35rem 0.7rem;" data-product-id="7" data-product-name="Point of Sale" data-product-price="200.00">
                 Add To Cart
               </button>
             </div>
           </div>
         </div>

         <!-- Product Card 8 -->
         <div class="col-md-3">
           <div class="card product-card" data-product-id="8">
             <div class="card-body text-center">
               <img src="~/img/discounts/pc.png" alt="Point of Sale" class="img-fluid mb-3" style="max-height: 150px;">
               <h6 class="card-title">Point of Sale</h6>
               <p class="text-muted small mb-2">183.7 × 149.88</p>
               <div class="price mb-3" data-price="200.00">$200.00</div>
               <button class="btn btn-outline-dark add-to-cart-btn" style="font-size:0.95rem; padding:0.35rem 0.7rem;" data-product-id="8" data-product-name="Point of Sale" data-product-price="200.00">
                 Add To Cart
               </button>
             </div>
           </div>
         </div>

         <!-- Product Card 9 -->
         <div class="col-md-3">
           <div class="card product-card" data-product-id="9">
             <div class="card-body text-center">
               <img src="~/img/discounts/pc.png" alt="Point of Sale" class="img-fluid mb-3" style="max-height: 150px;">
               <h6 class="card-title">Point of Sale</h6>
               <p class="text-muted small mb-2">183.7 × 149.88</p>
               <div class="price mb-3" data-price="200.00">$200.00</div>
               <button class="btn btn-outline-dark add-to-cart-btn" style="font-size:0.95rem; padding:0.35rem 0.7rem;" data-product-id="9" data-product-name="Point of Sale" data-product-price="200.00">
                 Add To Cart
               </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Shopping Cart Sidebar -->
    <div class="position-fixed end-0 top-0 bg-white shadow-lg flex-column" id="shopping-cart-sidebar" style="width: 400px; z-index: 9999; overflow: hidden; display: none; height: calc(100vh - 40px);">
      <!-- Cart Header with Close Button -->
      <div class="d-flex justify-content-between align-items-center p-3 border-bottom" style="flex-shrink: 0;">
        <h5 class="mb-0">Shopping Cart</h5>
        <button type="button" class="btn-close" onclick="closeCart()" aria-label="Close"></button>
      </div>
      
      <!-- Cart Content -->
      <div style="flex: 1; overflow-y: auto; padding: 1rem;">
        <div id="store-cart-items">
          <!-- Cart items will be dynamically added here -->
        </div>
      </div>
      
      <!-- Cart Footer -->
      <div class="border-top p-3" style="flex-shrink: 0;">
        <div class="d-flex justify-content-between align-items-center">
          <button class="btn btn-outline-secondary" onclick="closeCart()">Close</button>
          <button class="btn" style="background-color: #ec7905; color: white;" onclick="goToCheckout()">
            Checkout
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Checkout Content (Hidden by default) -->
<div id="checkout-content" style="display: none;">
  <div class="container-xxl flex-grow-1 container-p-y">
    <!-- Store Title as Back Button -->
    <div class="mb-4">
      <h4 class="fw-bold mb-0" style="cursor:pointer;display:inline-block;" onclick="backToStore()">Store</h4>
    </div>
    <div class="row g-4">
      <!-- Shopping Cart Section -->
      <div class="col-lg-8">
        <div class="cart-section card p-4" style="background: #fff; border-radius: 12px;">
          <h5 class="mb-4">Shopping Cart</h5>
          <div class="table-responsive">
            <table class="table mb-0">
              <thead>
                <tr style="border-bottom: 2px solid #f0f0f0;">
                  <th class="fw-bold">PRODUCT</th>
                  <th class="fw-bold">QUANTITY</th>
                  <th class="fw-bold">PRICE</th>
                </tr>
              </thead>
              <tbody id="checkout-cart-items">
                <!-- Cart items will be populated here -->
              </tbody>
            </table>
          </div>
          <button class="btn btn-outline-secondary mt-4" onclick="resetOrder()">Reset order</button>
        </div>
      </div>

      <!-- Right Side: Coupon, Summary, Payment -->
      <div class="col-lg-4">
        <div class="card p-0" style="background: #fff; border-radius: 12px;">
          <!-- Coupon Code (vertical layout) -->
          <div class="p-4 border-bottom" style="border-color: #f0f0f0 !important;">
            <h6 class="card-title mb-3">Coupon code.</h6>
            <div class="d-flex flex-column gap-2">
              <input type="text" class="form-control" placeholder="Enter Your Coupon Code" style="flex:1;">
              <button class="btn w-100" style="background-color: #ec7905; color: white; border-color: #ec7905; min-width: 160px; font-size: 0.98rem; padding: 0.45rem 0;"Apply Your Coupon</button>
            </div>
          </div>
          <!-- Order Summary -->
          <div class="p-4 border-bottom" style="border-color: #f0f0f0 !important;">
            <h6 class="card-title mb-3">Order Summary.</h6>
            <div class="d-flex justify-content-between mb-2">
              <span>Discount:</span>
              <span>$00.00</span>
            </div>
            <div class="d-flex justify-content-between mb-2">
              <span>Delivery:</span>
              <span>$29.00</span>
            </div>
            <div class="d-flex justify-content-between mb-2">
              <span>Tax:</span>
              <span>$39.00</span>
            </div>
            <hr style="margin: 0.5rem 0; border-color: #f0f0f0;">
            <div class="d-flex justify-content-between fw-bold">
              <span>Total:</span>
              <span id="checkout-total">$39.00</span>
            </div>
          </div>
          <!-- Payment -->
          <div class="p-4">
            <h6 class="card-title mb-3">Payment.</h6>
            <div class="d-flex gap-2 mb-3">
              <div class="payment-method">
                <i class="bx bxl-paypal" style="font-size: 2rem; color: #0070ba;"></i>
              </div>
              <div class="payment-method">
                <i class="bx bxl-mastercard" style="font-size: 2rem; color: #eb001b;"></i>
              </div>
              <div class="payment-method">
                <span style="font-size: 2rem; font-weight: bold; color: #6772e5;">S</span>
              </div>
              <div class="payment-method">
                <span style="font-size: 2rem; font-weight: bold; color: #f7931a;">₿</span>
              </div>
            </div>
            <button class="btn w-100" style="background-color: #ec7905; color: white; border-color: #ec7905; font-size: 1.1rem;"Pay</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- removed duplicate script block that reset cart and shadowed functions -->

<style>
body { background: #f7f7fa; }
.cart-section { box-shadow: 0 2px 16px rgba(0,0,0,0.04); }

/* Cart styling improvements */
#shopping-cart-sidebar .card {
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0,0,0,0.08);
  border: none;
  overflow: hidden;
}

#shopping-cart-sidebar .card-header {
  background: #fff;
  border-bottom: 1px solid #e9ecef;
  border-radius: 12px 12px 0 0;
  padding: 1rem 1.5rem;
}



/* Empty cart styling */
#store-cart-items.d-flex {
  min-height: 400px;
}

#store-cart-items .text-center img {
  opacity: 0.7;
  transition: opacity 0.3s ease;
}

#store-cart-items .text-center:hover img {
  opacity: 1;
}

/* Cart layout improvements for 110vh height */
#shopping-cart-sidebar .card-body {
  padding: 1rem 1rem 0.75rem 1rem;
  display: flex;
  flex-direction: column;
  height: calc(110vh - 65px);
}

/* Cart items container */
#store-cart-items {
  min-height: 100px;
}

/* Individual cart item */
.cart-item {
  display: flex;
  align-items: center;
  padding: 0.75rem 0;
  border-bottom: 1px solid #f0f0f0;
  transition: background-color 0.2s;
}

.cart-item:last-child {
  border-bottom: none;
}

.cart-item:hover {
  background-color: #f9f9f9;
}

/* Scrollbar styling for the entire cart */
#shopping-cart-sidebar::-webkit-scrollbar {
  width: 8px;
}

#shopping-cart-sidebar::-webkit-scrollbar-track {
  background: #f8f9fa;
}

#shopping-cart-sidebar::-webkit-scrollbar-thumb {
  background: #dee2e6;
  border-radius: 4px;
}

#shopping-cart-sidebar::-webkit-scrollbar-thumb:hover {
  background: #adb5bd;
}

/* Ensure buttons stay at bottom and visible */
.cart-actions {
  position: sticky;
  bottom: 0;
  background: #fff;
  padding: 0.75rem 0.75rem 1rem 0.75rem; /* extra bottom padding for breathing room */
  margin-top: 0.75rem !important;
  border-top: 1px solid #e9ecef;
}

/* Product grid improvements */
.product-card {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  border-radius: 12px;
  border: none;
  box-shadow: 0 2px 8px rgba(0,0,0,0.06);
}

.product-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 16px rgba(0,0,0,0.12);
}

.payment-method {
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid #ddd;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  background: #fff;
}
.payment-method:hover {
  border-color: #ec7905;
  transform: scale(1.1);
}
</style> 